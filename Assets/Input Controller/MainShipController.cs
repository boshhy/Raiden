//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Input Controller/MainShipController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MainShipController: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MainShipController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MainShipController"",
    ""maps"": [
        {
            ""name"": ""Ship"",
            ""id"": ""90773b77-c60c-4a2e-986e-bb3acab86636"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""659ea450-f028-4767-926e-4f8f819b7226"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FireBullet"",
                    ""type"": ""Button"",
                    ""id"": ""1da580d4-2f31-4960-88d6-26b7c73c0268"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FireCannons"",
                    ""type"": ""Button"",
                    ""id"": ""3227506e-54fe-4d30-8278-698d7bfbe315"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FireBigSpaceGun"",
                    ""type"": ""Button"",
                    ""id"": ""b0442a80-10d2-46cf-b175-9519045b7bc4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FireZapperGun"",
                    ""type"": ""Button"",
                    ""id"": ""3b7b4789-dfb7-4209-b275-edc889faf8ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FireRockets"",
                    ""type"": ""Button"",
                    ""id"": ""a1134aae-8aa1-46fe-a527-0af3093d2914"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""cc36a6d4-2bc2-498b-8a7d-8125f34716a5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fff95122-7df3-4318-b6e0-b9a148bf6fbe"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""09ac7ac3-a8c8-4029-ba8c-0ce1cb4fd76a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d1886075-3499-4b21-8644-a28187309fc2"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c1d011f2-5a8b-4d72-b6b6-5b3767cee3bb"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6f82dec4-8ded-43a4-a944-124c0b2ee7b4"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba92493e-50bd-4237-a40b-a2e0ba989e00"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireBullet"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""042468b7-a48d-4f72-999d-16885725ecd3"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireBullet"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b860c4b8-7c1d-4190-ae0e-ee76064b8d8e"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireCannons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""adf8776a-367a-4cc5-a8b6-67af43bfe15a"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireCannons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fee07f5b-c252-4f91-b714-61703eea38a9"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireBigSpaceGun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ffc3672d-9835-4ff4-b975-7a4e40d22614"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireBigSpaceGun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""adf00f60-660a-4547-8265-d03698ef2410"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireZapperGun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83fd871d-ac9e-4f14-a9e2-5654ad55f95e"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireZapperGun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""936dbdd7-a3e8-482d-902f-ecade0d09436"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireRockets"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""915d5483-7388-4fbd-88d6-2ecb55e44112"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireRockets"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UIMenu"",
            ""id"": ""c0d7c68f-bcd4-498b-be4a-506425eb0e66"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""051cdf6f-d7b0-4728-ac56-2b7c904edfba"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Start"",
                    ""type"": ""Button"",
                    ""id"": ""1b0e6987-61eb-4dd2-8a01-4af87f79e9a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""c119a38c-5472-4653-a6d9-d6c54358c63d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e96e8243-a19f-4b97-b336-5081c114649c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e4128582-b27d-4d7f-bb26-5808bf082b70"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3d4a3522-b9a1-435f-9c2a-2c0ab39ceb20"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c5bdaa59-6a66-4e27-8b7b-2a6f5f22047e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrow Keys"",
                    ""id"": ""84729cb3-d7c2-4c7b-a45b-115d74854b99"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8364b436-8965-463d-963a-20955fd5399a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e87fbd6f-5fd3-492f-980b-70e25d0fb324"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a9433aa6-d47d-4270-863d-6114616b9574"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""98535871-1d49-4cd0-9eed-2011caceb788"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9c2cdd43-d4a5-4fc2-8447-2c3de9d38bab"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b75887e3-0d3e-447a-872f-3657433a0f65"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cda4d56c-f3cf-478e-8d30-47cadb1c1d84"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Ship
        m_Ship = asset.FindActionMap("Ship", throwIfNotFound: true);
        m_Ship_Move = m_Ship.FindAction("Move", throwIfNotFound: true);
        m_Ship_FireBullet = m_Ship.FindAction("FireBullet", throwIfNotFound: true);
        m_Ship_FireCannons = m_Ship.FindAction("FireCannons", throwIfNotFound: true);
        m_Ship_FireBigSpaceGun = m_Ship.FindAction("FireBigSpaceGun", throwIfNotFound: true);
        m_Ship_FireZapperGun = m_Ship.FindAction("FireZapperGun", throwIfNotFound: true);
        m_Ship_FireRockets = m_Ship.FindAction("FireRockets", throwIfNotFound: true);
        // UIMenu
        m_UIMenu = asset.FindActionMap("UIMenu", throwIfNotFound: true);
        m_UIMenu_Move = m_UIMenu.FindAction("Move", throwIfNotFound: true);
        m_UIMenu_Start = m_UIMenu.FindAction("Start", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Ship
    private readonly InputActionMap m_Ship;
    private List<IShipActions> m_ShipActionsCallbackInterfaces = new List<IShipActions>();
    private readonly InputAction m_Ship_Move;
    private readonly InputAction m_Ship_FireBullet;
    private readonly InputAction m_Ship_FireCannons;
    private readonly InputAction m_Ship_FireBigSpaceGun;
    private readonly InputAction m_Ship_FireZapperGun;
    private readonly InputAction m_Ship_FireRockets;
    public struct ShipActions
    {
        private @MainShipController m_Wrapper;
        public ShipActions(@MainShipController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Ship_Move;
        public InputAction @FireBullet => m_Wrapper.m_Ship_FireBullet;
        public InputAction @FireCannons => m_Wrapper.m_Ship_FireCannons;
        public InputAction @FireBigSpaceGun => m_Wrapper.m_Ship_FireBigSpaceGun;
        public InputAction @FireZapperGun => m_Wrapper.m_Ship_FireZapperGun;
        public InputAction @FireRockets => m_Wrapper.m_Ship_FireRockets;
        public InputActionMap Get() { return m_Wrapper.m_Ship; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ShipActions set) { return set.Get(); }
        public void AddCallbacks(IShipActions instance)
        {
            if (instance == null || m_Wrapper.m_ShipActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ShipActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @FireBullet.started += instance.OnFireBullet;
            @FireBullet.performed += instance.OnFireBullet;
            @FireBullet.canceled += instance.OnFireBullet;
            @FireCannons.started += instance.OnFireCannons;
            @FireCannons.performed += instance.OnFireCannons;
            @FireCannons.canceled += instance.OnFireCannons;
            @FireBigSpaceGun.started += instance.OnFireBigSpaceGun;
            @FireBigSpaceGun.performed += instance.OnFireBigSpaceGun;
            @FireBigSpaceGun.canceled += instance.OnFireBigSpaceGun;
            @FireZapperGun.started += instance.OnFireZapperGun;
            @FireZapperGun.performed += instance.OnFireZapperGun;
            @FireZapperGun.canceled += instance.OnFireZapperGun;
            @FireRockets.started += instance.OnFireRockets;
            @FireRockets.performed += instance.OnFireRockets;
            @FireRockets.canceled += instance.OnFireRockets;
        }

        private void UnregisterCallbacks(IShipActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @FireBullet.started -= instance.OnFireBullet;
            @FireBullet.performed -= instance.OnFireBullet;
            @FireBullet.canceled -= instance.OnFireBullet;
            @FireCannons.started -= instance.OnFireCannons;
            @FireCannons.performed -= instance.OnFireCannons;
            @FireCannons.canceled -= instance.OnFireCannons;
            @FireBigSpaceGun.started -= instance.OnFireBigSpaceGun;
            @FireBigSpaceGun.performed -= instance.OnFireBigSpaceGun;
            @FireBigSpaceGun.canceled -= instance.OnFireBigSpaceGun;
            @FireZapperGun.started -= instance.OnFireZapperGun;
            @FireZapperGun.performed -= instance.OnFireZapperGun;
            @FireZapperGun.canceled -= instance.OnFireZapperGun;
            @FireRockets.started -= instance.OnFireRockets;
            @FireRockets.performed -= instance.OnFireRockets;
            @FireRockets.canceled -= instance.OnFireRockets;
        }

        public void RemoveCallbacks(IShipActions instance)
        {
            if (m_Wrapper.m_ShipActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IShipActions instance)
        {
            foreach (var item in m_Wrapper.m_ShipActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ShipActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ShipActions @Ship => new ShipActions(this);

    // UIMenu
    private readonly InputActionMap m_UIMenu;
    private List<IUIMenuActions> m_UIMenuActionsCallbackInterfaces = new List<IUIMenuActions>();
    private readonly InputAction m_UIMenu_Move;
    private readonly InputAction m_UIMenu_Start;
    public struct UIMenuActions
    {
        private @MainShipController m_Wrapper;
        public UIMenuActions(@MainShipController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_UIMenu_Move;
        public InputAction @Start => m_Wrapper.m_UIMenu_Start;
        public InputActionMap Get() { return m_Wrapper.m_UIMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIMenuActions set) { return set.Get(); }
        public void AddCallbacks(IUIMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_UIMenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIMenuActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Start.started += instance.OnStart;
            @Start.performed += instance.OnStart;
            @Start.canceled += instance.OnStart;
        }

        private void UnregisterCallbacks(IUIMenuActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Start.started -= instance.OnStart;
            @Start.performed -= instance.OnStart;
            @Start.canceled -= instance.OnStart;
        }

        public void RemoveCallbacks(IUIMenuActions instance)
        {
            if (m_Wrapper.m_UIMenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_UIMenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIMenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIMenuActions @UIMenu => new UIMenuActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    public interface IShipActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnFireBullet(InputAction.CallbackContext context);
        void OnFireCannons(InputAction.CallbackContext context);
        void OnFireBigSpaceGun(InputAction.CallbackContext context);
        void OnFireZapperGun(InputAction.CallbackContext context);
        void OnFireRockets(InputAction.CallbackContext context);
    }
    public interface IUIMenuActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnStart(InputAction.CallbackContext context);
    }
}
